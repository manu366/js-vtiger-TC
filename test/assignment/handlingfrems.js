const { assert } = require("chai")

describe('frames',async()=>{
    it('frames',async()=>{
        await browser.url("https://chercher.tech/practice/frames")
        await browser.maximizeWindow()
        const frame1=await browser.$("//iframe[@id='frame1']")
        await browser.switchToFrame(frame1)
        const topic=await browser.$("//input")
        topic.waitForDisplayed()
        await topic.setValue("frames")
        var value=await topic.getValue()
        await assert.equal(value,"frames","not equal")
        // await expect(value).toHaveTextContaining("frames")
        const frame2=await browser.$("//iframe[@id='frame3']")
        frame2.waitForDisplayed()
        await browser.switchToFrame(frame2)
        const check=await browser.$("//input[@id='a']")
        check.waitForDisplayed()
        await check.click()
        await browser.switchToFrame(null)
    
        const frame3=await browser.$("//iframe[@data-ezsrc='dropdown-frame.html']")
        frame3.waitForDisplayed()
        await browser.switchToFrame(frame3)
        const animal=await browser.$("//select[@id='animals']")
        animal.waitForDisplayed()
        animal.selectByVisibleText("Avatar")
        await browser.switchToParentFrame()
    })
})